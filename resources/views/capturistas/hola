Ahora dame la funcionalidad de poder exportar a excel.
Los datos que se exportarán son los que se muestren en el index, y si se les aplicó algún filtro entonces se exportarán solo los datos filtrados.
Te dejo como lo hago en app/exports/OperadoresExport.php para que copies el diseño tal cual lo hago en ese, para mantener un estandar, tambien te paso el controlador e index de vehiculos

OperadoresExport:

<?php

namespace App\Exports;

use App\Models\Operador;
use Illuminate\Http\Request;
use Maatwebsite\Excel\Concerns\FromQuery;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\WithMapping;
use Maatwebsite\Excel\Concerns\ShouldAutoSize;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Concerns\WithCustomStartCell;
use Maatwebsite\Excel\Concerns\WithTitle;
use Maatwebsite\Excel\Concerns\WithDrawings;
use Maatwebsite\Excel\Events\AfterSheet;
use PhpOffice\PhpSpreadsheet\Worksheet\Drawing;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Border;

class OperadoresExport implements
    FromQuery,
    WithHeadings,
    WithMapping,
    ShouldAutoSize,
    WithEvents,
    WithCustomStartCell,
    WithTitle,
    WithDrawings
{
    protected array $params;
    protected int $rowNumber = 0;

    /** Última columna usada (A..H) para merges/estilos */
    private const LAST_COL = 'H';

    /** Fila donde empiezan los datos (después del header visual) */
    private const DATA_START_ROW = 6;

    /**
     * @param  Request|array  $params
     */
    public function __construct($params = [])
    {
        $this->params = $params instanceof Request ? $params->all() : (array) $params;
    }

    /**
     * Exporta TODOS los registros que cumplen filtros/orden actuales (sin paginar).
     */
    public function query()
    {
        $sortBy  = $this->params['sort_by']  ?? 'nombre_completo';
        $sortDir = $this->params['sort_dir'] ?? 'asc';
        $sortDir = $sortDir === 'desc' ? 'desc' : 'asc';

        $q = Operador::query()
            ->with(['user'])
            ->filter($this->params);

        if ($sortBy === 'nombre_completo') {
            $q->orderByRaw("CONCAT_WS(' ', operadores.nombre, operadores.apellido_paterno, operadores.apellido_materno) {$sortDir}");
        } elseif ($sortBy === 'email') {
            $q->leftJoin('users', 'operadores.user_id', '=', 'users.id')
              ->orderBy('users.email', $sortDir)
              ->select('operadores.*');
        } else {
            $q->orderBy($sortBy, $sortDir);
        }

        return $q;
    }

    /**
     * Título de la hoja.
     */
    public function title(): string
    {
        return 'Operadores';
    }

    /**
     * Encabezados de columnas (fila 5 en este diseño).
     */
    public function headings(): array
    {
        return [
            '#',
            'Nombre completo',
            'Correo electrónico',
            'Teléfono',
            'Tipo sangre',
            'Contacto emergencia',
            'Tel. emergencia',
            'Creado el',
        ];
    }

    /**
     * La celda donde inician los encabezados de columnas.
     */
    public function startCell(): string
    {
        // Encabezados de columnas van en la fila 5, datos empiezan en la 6
        return 'A5';
    }

    /**
     * Logo en A1.
     */
    public function drawings()
    {
        $logoPath = public_path('images/logoOriginal2.png'); // \transportes\public\images\logoOriginal.png
        if (!file_exists($logoPath)) {
            return null;
        }

        $drawing = new Drawing();
        $drawing->setName('Logo');
        $drawing->setDescription('Futurama Tires');
        $drawing->setPath($logoPath);
        $drawing->setHeight(48);       // ajusta si deseas más grande
        $drawing->setCoordinates('A1'); // posición
        $drawing->setOffsetX(5);
        $drawing->setOffsetY(2);

        return $drawing;
    }

    /**
     * Mapeo de cada fila (modelo Operador -> fila XLSX).
     */
    public function map($op): array
    {
        $this->rowNumber++;

        $nombre = $op->nombre_completo
            ?? trim(($op->nombre ?? '') . ' ' . ($op->apellido_paterno ?? '') . ' ' . ($op->apellido_materno ?? ''));

        return [
            $this->rowNumber,
            $nombre ?: 'Operador',
            optional($op->user)->email ?: '—',
            $op->telefono ?: '—',
            $op->tipo_sangre ?: '—',
            $op->contacto_emergencia_nombre ?: '—',
            $op->contacto_emergencia_tel ?: '—',
            optional($op->created_at)?->format('Y-m-d H:i') ?: '—',
        ];
    }

    /**
     * Estilos y header visual (logo, título, subtítulo, fecha, bordes).
     */
    public function registerEvents(): array
    {
        return [
            AfterSheet::class => function (AfterSheet $e) {
                $sheet   = $e->sheet->getDelegate();
                $lastCol = self::LAST_COL;

                // Reservamos la columna A para el logo; colocamos textos de encabezado a partir de B
                // Fila 1: Futurama Tires
                $sheet->mergeCells("B1:{$lastCol}1");
                $sheet->setCellValue('B1', 'Futurama Tires');

                // Fila 2: Reporte de Operadores
                $sheet->mergeCells("B2:{$lastCol}2");
                $sheet->setCellValue('B2', 'Reporte de Operadores');

                // Fila 3: Fecha de generación
                $sheet->mergeCells("B3:{$lastCol}3");
                $sheet->setCellValue('B3', 'Fecha de generación: ' . now()->format('Y-m-d H:i'));

                // Fondo claro para bandas superiores (A1:H3) y bordes gruesos alrededor del bloque
                $sheet->getStyle("A1:{$lastCol}1")->applyFromArray([
                    'font'      => [
                        'bold' => true,
                        'size' => 32,
                        'color' => ['rgb' => 'F6F7EB'], // Color blanco
                        'name' => 'Arial', // Fuente Arial
                        'italic' => true
                    ],
                    'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER, 'vertical' => Alignment::VERTICAL_CENTER],
                    'fill'      => ['fillType' => Fill::FILL_SOLID, 'color' => ['rgb' => 'E94F37']],
                ]);
                $sheet->getRowDimension(1)->setRowHeight(42);

                $sheet->getStyle("A2:{$lastCol}2")->applyFromArray([
                    'font'      => ['bold' => true, 'size' => 12, 'name' => 'Arial', 'color' => ['rgb' => '393E41']],
                    'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER, 'vertical' => Alignment::VERTICAL_CENTER],
                    'fill'      => ['fillType' => Fill::FILL_SOLID, 'color' => ['rgb' => 'F6F7EB']],
                ]);
                $sheet->getRowDimension(2)->setRowHeight(22);

                $sheet->getStyle("A3:{$lastCol}3")->applyFromArray([
                    'font'      => ['size' => 10,'name' => 'Arial', 'color' => ['rgb' => 'f8f8ff']],
                    'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER, 'vertical' => Alignment::VERTICAL_CENTER],
                    'fill'      => ['fillType' => Fill::FILL_SOLID, 'color' => ['rgb' => '393E41']],
                ]);
                $sheet->getRowDimension(3)->setRowHeight(18);

                // Borde grueso que envuelve el encabezado (filas 1 a 3)
                $sheet->getStyle("A1:{$lastCol}3")->applyFromArray([
                    'borders' => [
                        'outline' => [
                            'borderStyle' => Border::BORDER_THICK,
                            'color'       => ['rgb' => '3d0600'],
                        ],
                    ],
                ]);

                // Encabezados de tabla (fila 5)
                $sheet->getStyle("A5:{$lastCol}5")->applyFromArray([
                    'font'      => ['bold' => true],
                    'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER],
                    'fill'      => ['fillType' => Fill::FILL_SOLID, 'color' => ['rgb' => 'EFEFEF']],
                    'borders'   => [
                        'allBorders' => [
                            'borderStyle' => Border::BORDER_THIN,
                            'color'       => ['rgb' => '3d0600'],
                        ],
                    ],
                ]);
                // Borde grueso envolviendo la fila de headers de la tabla
                $sheet->getStyle("A5:{$lastCol}5")->applyFromArray([
                    'borders' => [
                        'outline' => [
                            'borderStyle' => Border::BORDER_THICK,
                            'color'       => ['rgb' => '3d0600'],
                        ],
                    ],
                ]);

                // Auto–filter en la fila de encabezados
                $sheet->setAutoFilter("A5:{$lastCol}5");

                // Bordes finos para toda la tabla de datos
                $dataLastRow = max(5, self::DATA_START_ROW + $this->rowNumber - 1);
                if ($dataLastRow >= self::DATA_START_ROW) {
                    $sheet->getStyle("A".self::DATA_START_ROW.":{$lastCol}{$dataLastRow}")->applyFromArray([
                        'borders' => [
                            'allBorders' => [
                                'borderStyle' => Border::BORDER_HAIR,
                                'color'       => ['rgb' => 'DDDDDD'],
                            ],
                        ],
                    ]);
                    // Alinear números de fila y fechas
                    $sheet->getStyle("A".self::DATA_START_ROW.":A{$dataLastRow}")
                          ->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
                    $sheet->getStyle("H".self::DATA_START_ROW.":H{$dataLastRow}")
                          ->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
                }

                // Ajuste: un pequeño ancho para la columna A (logo) si fuese necesario
                // (AutoSize está activo, pero aseguramos mínimo)
                $currentWidth = $sheet->getColumnDimension('A')->getWidth();
                if ($currentWidth < 12) {
                    $sheet->getColumnDimension('A')->setWidth(12);
                }
            },
        ];
    }
}

vehiculos index:

{{-- resources/views/vehiculos/index.blade.php
     Vista Index (Tabler + Bootstrap) para la gestión de Vehículos
--}}
<x-app-layout>
    @vite(['resources/js/app.js', 'resources/js/vehiculos/index.js', 'resources/css/gallery.css'])

    <div id="vehiculos-app"
         data-base-photo="{{ url('/vehiculos/fotos') }}"
         data-base-veh="{{ url('/vehiculos') }}">

        @php
            // Filtros activos (para badge del botón)
            $ignored = ['search','page','sort_by','sort_dir'];
            $activeFilters = collect(request()->query())
                ->reject(fn($v, $k) => in_array($k, $ignored, true))
                ->filter(fn($v) => is_array($v)
                    ? collect($v)->filter(fn($x) => $x !== null && $x !== '')->isNotEmpty()
                    : $v !== null && $v !== ''
                );
            $activeCount = $activeFilters->count();

            // Columnas de orden
            $columns = [
                'created_at'  => 'Fecha',
                'id'          => 'ID',
                'placa'       => 'Placa',
                'serie'       => 'Serie',
                'unidad'      => 'Unidad',
                'marca'       => 'Marca',
                'anio'        => 'Año',
                'propietario' => 'Propietario',
            ];
        @endphp

        {{-- HEADER --}}
        <x-slot name="header">
            <div class="page-header d-print-none">
                <div class="container-xl">
                    <div class="row g-2 align-items-center">
                        <div class="col">
                            <h2 class="page-title mb-0">Gestión de Vehículos</h2>
                            <div class="text-secondary small mt-1">Consulta, filtra y administra tu flota.</div>
                        </div>
                        <div class="col-auto ms-auto">
                            <a href="{{ route('vehiculos.create') }}" class="btn btn-primary">
                                <i class="ti ti-plus me-1" aria-hidden="true"></i>
                                <span>Agregar Vehículo</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </x-slot>

        <div class="page-body">
            <div class="container-xl">

                {{-- FLASH ÉXITO --}}
                @if(session('success'))
                    <div class="alert alert-success" role="alert">
                        <i class="ti ti-check me-2" aria-hidden="true"></i>{{ session('success') }}
                    </div>
                @endif

                {{-- FORM GLOBAL (GET) --}}
                <form method="GET" action="{{ route('vehiculos.index') }}" aria-label="Búsqueda y filtros de vehículos">
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="row g-2 align-items-center">
                                {{-- Búsqueda --}}
                                <div class="col-12 col-xl">
                                    <div class="input-group" role="search" aria-label="Buscar en vehículos">
                                        <span class="input-group-text" id="icon-search">
                                            <i class="ti ti-search" aria-hidden="true"></i>
                                        </span>
                                        <input
                                            type="text"
                                            name="search"
                                            value="{{ request('search') }}"
                                            class="form-control"
                                            placeholder="Buscar por: ID, Unidad, Placa, Serie, Año, Propietario, Pólizas…"
                                            aria-label="Término de búsqueda"
                                            aria-describedby="icon-search"
                                        >
                                        <button class="btn btn-primary" type="submit">
                                            <i class="ti ti-search me-1" aria-hidden="true"></i>Buscar
                                        </button>
                                    </div>
                                </div>

                                {{-- Acciones --}}
                                <div class="col-12 col-xl-auto d-flex gap-2 justify-content-end">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="ti ti-download me-1" aria-hidden="true"></i>Exportar
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-end">
                                            <a class="dropdown-item" href="#"><i class="ti ti-file-spreadsheet me-2" aria-hidden="true"></i>Excel</a>
                                            <a class="dropdown-item" href="#"><i class="ti ti-file-description me-2" aria-hidden="true"></i>PDF</a>
                                        </div>
                                    </div>

                                    {{-- Botón Filtros --}}
                                    <button
                                        type="button"
                                        class="btn btn-outline-secondary position-relative"
                                        data-bs-toggle="offcanvas"
                                        data-bs-target="#filtersOffcanvas"
                                        aria-controls="filtersOffcanvas"
                                        aria-label="Abrir filtros">
                                        <i class="ti ti-adjustments" aria-hidden="true"></i>
                                        <span class="ms-2">Filtros</span>
                                        @if($activeCount > 0)
                                            <span class="badge bg-primary ms-2" aria-label="{{ $activeCount }} filtros activos">{{ $activeCount }}</span>
                                        @endif
                                    </button>
                                </div>
                            </div>

                            {{-- Resumen cuando hay búsqueda --}}
                            @if(request('search'))
                                @php
                                    $total    = $vehiculos->total();
                                    $first    = $vehiculos->firstItem();
                                    $last     = $vehiculos->lastItem();
                                    $current  = $vehiculos->currentPage();
                                    $lastPage = $vehiculos->lastPage();
                                @endphp
                                <div class="mt-3 d-flex flex-column flex-sm-row align-items-start align-items-sm-center justify-content-between" role="status">
                                    <div class="small">
                                        <span class="badge bg-secondary text-uppercase">Filtro</span>
                                        <span class="ms-2">“{{ request('search') }}”</span>
                                    </div>
                                    <div class="text-secondary small mt-2 mt-sm-0">
                                        @if($total === 0)
                                            Sin resultados para la búsqueda.
                                        @elseif($total === 1)
                                            Resultado <strong>(1 de 1)</strong>
                                        @else
                                            Página <strong>{{ $current }}</strong> de <strong>{{ $lastPage }}</strong> —
                                            Mostrando <strong>{{ $first }}–{{ $last }}</strong> de <strong>{{ $total }}</strong>
                                        @endif
                                    </div>
                                </div>
                            @endif
                        </div>
                    </div>

                    {{-- OFFCANVAS (componente) --}}
                    <x-filters-offcanvas
                        id="filtersOffcanvas"
                        title="Filtros"
                        :clear-url="route('vehiculos.index')"
                        :backdrop="true"
                        :scroll="false"
                    >
                        <x-slot name="filters">
                            {{-- Principales --}}
                            <div class="mb-4">
                                <div class="text-secondary text-uppercase fw-semibold small mb-2">Principales</div>
                                <div class="row g-2">
                                    <x-filter.input name="id"        type="number" label="ID"          class="col-12 col-sm-6" />
                                    <x-filter.input name="unidad"    label="Unidad"                    class="col-12 col-sm-6" />
                                    <x-filter.input name="placa"     label="Placa"                     class="col-12 col-sm-6" />
                                    <x-filter.input name="serie"     label="Serie (VIN)"               class="col-12 col-sm-6" />
                                    <x-filter.input name="propietario" label="Propietario"            class="col-12 col-sm-6" />
                                    <x-filter.select name="marca"    label="Marca" :options="$marcas ?? []" empty="Todas" class="col-12 col-sm-6" />
                                </div>
                            </div>

                            {{-- Año --}}
                            <x-filter.number-range
                                nameMin="anio_min"
                                nameMax="anio_max"
                                label="Año"
                                class="mb-4"
                            />
                        </x-slot>

                        <x-slot name="order">
                            {{-- Orden --}}
                            <div class="mb-1">
                                <div class="text-secondary text-uppercase fw-semibold small mb-2">Orden</div>
                                <div class="row g-2">
                                    <x-filter.select
                                        name="sort_by"
                                        label="Ordenar por"
                                        :options="$columns"
                                        :value="request('sort_by','created_at')"
                                        class="col-12 col-sm-6"
                                    />
                                    <x-filter.select
                                        name="sort_dir"
                                        label="Dirección"
                                        :options="['asc' => 'Ascendente','desc' => 'Descendente']"
                                        :value="request('sort_dir','asc')"
                                        class="col-12 col-sm-6"
                                    />
                                </div>
                            </div>
                        </x-slot>
                    </x-filters-offcanvas>
                    {{-- /OFFCANVAS --}}
                </form>

                {{-- TABLA --}}
                <div class="card">
                    <div class="table-responsive">
                        <table class="table table-vcenter table-striped table-hover">
                            <thead>
                                <tr class="text-uppercase text-secondary small">
                                    <th class="text-nowrap text-center">#</th>
                                    <th>Unidad</th>
                                    <th>Placa</th>
                                    <th>Serie</th>
                                    <th>Año</th>
                                    <th>Propietario</th>
                                    <th class="text-end">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @forelse($vehiculos as $v)
                                    @php
                                        $tarjetaNumero = optional($v->tarjetaSiVale)->numero_tarjeta;
                                        $tarjetaLabel  = $tarjetaNumero ?: ($v->tarjeta_si_vale_id ? ('ID '.$v->tarjeta_si_vale_id) : null);

                                        $vehData = [
                                            'id'          => $v->id,
                                            'unidad'      => $v->unidad,
                                            'placa'       => $v->placa,
                                            'serie'       => $v->serie,
                                            'marca'       => $v->marca,
                                            'anio'        => $v->anio,
                                            'propietario' => $v->propietario,
                                            'ubicacion'   => $v->ubicacion ?? null,
                                            'estado'      => $v->estado ?? null,
                                            'motor'       => $v->motor ?? null,
                                            'kilometros'  => $v->kilometros ?? null,
                                            'tarjeta'     => $tarjetaLabel,
                                            'tarjeta_si_vale_id' => $v->tarjeta_si_vale_id ?? null,
                                            'tarjeta_si_vale'    => [
                                                'numero_tarjeta'    => $tarjetaNumero,
                                                'fecha_vencimiento' => optional($v->tarjetaSiVale)->fecha_vencimiento,
                                            ],
                                            'nip'                       => $v->nip ?? null,
                                            'fec_vencimiento'           => $v->fec_vencimiento ?? null,
                                            'vencimiento_t_circulacion' => $v->vencimiento_t_circulacion ?? null,
                                            'cambio_placas'             => $v->cambio_placas ?? null,
                                            'poliza_hdi'      => $v->poliza_hdi ?? null,
                                            'poliza_latino'   => $v->poliza_latino ?? null,
                                            'poliza_qualitas' => $v->poliza_qualitas ?? null,
                                            'fotos'   => isset($v->fotos) ? $v->fotos->map(fn($f) => ['id' => $f->id])->values() : [],
                                            'tanques' => isset($v->tanques) ? $v->tanques->map(fn($t) => [
                                                'id'                   => $t->id,
                                                'numero_tanque'        => $t->numero_tanque,
                                                'tipo_combustible'     => $t->tipo_combustible,
                                                'capacidad_litros'     => $t->capacidad_litros,
                                                'rendimiento_estimado' => $t->rendimiento_estimado,
                                                'km_recorre'           => $t->km_recorre,
                                                'costo_tanque_lleno'   => $t->costo_tanque_lleno,
                                            ])->values() : [],
                                        ];
                                    @endphp
                                    <tr>
                                        <td class="text-nowrap text-center">{{ $loop->iteration }}</td>
                                        <td class="text-nowrap">{{ $v->unidad ?? '—' }}</td>
                                        <td class="text-nowrap">{{ $v->placa ?? '—' }}</td>
                                        <td class="text-nowrap">{{ $v->serie ?? '—' }}</td>
                                        <td class="text-nowrap">{{ $v->anio ?? '—' }}</td>
                                        <td class="text-nowrap">{{ $v->propietario ?? '—' }}</td>
                                        <td class="text-end">
                                            <div class="d-inline-flex gap-1">
                                                <button type="button"
                                                        class="btn btn-outline-secondary btn-sm btn-view-veh"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#vehicleModal"
                                                        data-veh='@json($vehData, JSON_UNESCAPED_UNICODE)'
                                                        title="Ver detalles">
                                                    <i class="ti ti-eye me-1" aria-hidden="true"></i>Ver
                                                </button>

                                                <a href="{{ route('vehiculos.edit', $v) }}"
                                                   class="btn btn-outline-secondary btn-sm"
                                                   title="Editar">
                                                    <i class="ti ti-edit me-1" aria-hidden="true"></i>Editar
                                                </a>

                                                <form action="{{ route('vehiculos.destroy', $v) }}"
                                                      method="POST"
                                                      class="d-inline"
                                                      onsubmit="return confirm('¿Eliminar el vehículo #{{ $v->id }}?');">
                                                    @csrf
                                                    @method('DELETE')
                                                    <button type="submit" class="btn btn-danger btn-sm" title="Eliminar">
                                                        <i class="ti ti-trash me-1" aria-hidden="true"></i>Eliminar
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr>
                                        <td colspan="7">
                                            <div class="empty">
                                                <div class="empty-icon">
                                                    <i class="ti ti-database-off" aria-hidden="true"></i>
                                                </div>
                                                <p class="empty-title">No hay datos</p>
                                                <p class="text-secondary empty-subtitle">
                                                    @if(request()->hasAny(['search','id','unidad','placa','serie','anio_min','anio_max','propietario','marca']))
                                                        No se encontraron resultados con los filtros aplicados.
                                                    @else
                                                        Aún no has registrado vehículos.
                                                    @endif
                                                </p>
                                                <div class="empty-action">
                                                    @if(request()->hasAny(['search','id','unidad','placa','serie','anio_min','anio_max','propietario','marca']))
                                                        <a href="{{ route('vehiculos.index') }}" class="btn btn-outline-secondary">
                                                            Limpiar filtros
                                                        </a>
                                                    @endif
                                                    <a href="{{ route('vehiculos.create') }}" class="btn btn-primary">
                                                        <i class="ti ti-plus me-2" aria-hidden="true"></i>Agregar Vehículo
                                                    </a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                </div>

                {{-- PAGINACIÓN --}}
                @if(method_exists($vehiculos, 'links'))
                    @php
                        $totalAll    = $vehiculos->total();
                        $firstAll    = $vehiculos->firstItem();
                        $lastAll     = $vehiculos->lastItem();
                        $currentAll  = $vehiculos->currentPage();
                        $lastPageAll = $vehiculos->lastPage();
                    @endphp
                    <div class="d-flex flex-column flex-sm-row align-items-start align-items-sm-center justify-content-between mt-3">
                        <p class="text-secondary small mb-2 mb-sm-0">
                            @if($totalAll === 0)
                                Mostrando 0 resultados
                            @elseif($totalAll === 1)
                                Resultado <strong>(1 de 1)</strong>
                            @else
                                Página <strong>{{ $currentAll }}</strong> de <strong>{{ $lastPageAll }}</strong> —
                                Mostrando <strong>{{ $firstAll }}–{{ $lastAll }}</strong> de <strong>{{ $totalAll }}</strong> resultados
                            @endif
                        </p>
                        <div>
                            {{ $vehiculos->appends(request()->only([
                                'search','id','unidad','placa','serie','anio_min','anio_max','propietario','marca','sort_by','sort_dir',
                            ]))->links() }}
                        </div>
                    </div>
                @endif

                {{-- FOOTER --}}
                <div class="text-center text-secondary small py-4">
                    © {{ date('Y') }} Futurama Tires · Todos los derechos reservados
                </div>
            </div>
        </div>

        {{-- MODAL DETALLE (completo) --}}
        <div class="modal modal-blur fade" id="vehicleModal" tabindex="-1" aria-labelledby="vehicleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <div>
                            <p class="text-secondary text-uppercase small mb-1">Detalles del Vehículo</p>
                            <h3 class="modal-title h4" id="vehicleModalLabel">Vehículo</h3>
                            <div class="text-secondary small" id="vehicleModalSubtitle"></div>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>

                    <div class="modal-body">
                        {{-- Datos generales --}}
                        <div class="card mb-3">
                            <div class="card-header">
                                <h4 class="card-title mb-0">Datos generales</h4>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-6 col-md-4"><div class="text-secondary small">ID</div><div class="fw-semibold" data-v="id">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Unidad</div><div class="fw-semibold" data-v="unidad">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Placa</div><div class="fw-semibold" data-v="placa">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Serie (VIN)</div><div class="fw-semibold" data-v="serie">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Marca</div><div class="fw-semibold" data-v="marca">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Año</div><div class="fw-semibold" data-v="anio">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Propietario</div><div class="fw-semibold" data-v="propietario">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Ubicación</div><div class="fw-semibold" data-v="ubicacion">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Estado</div><div class="fw-semibold" data-v="estado">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Motor</div><div class="fw-semibold" data-v="motor">—</div></div>

                                    {{-- Odómetro --}}
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Kilometraje (km)</div><div class="fw-semibold" data-v="kilometros">—</div></div>

                                    {{-- Tarjeta / documentos --}}
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Tarjeta SiVale</div><div class="fw-semibold" data-v="tarjeta">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">NIP</div><div class="fw-semibold" data-v="nip">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Venc. tarjeta</div><div class="fw-semibold" data-v="fec_vencimiento">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Venc. circ.</div><div class="fw-semibold" data-v="vencimiento_t_circulacion">—</div></div>
                                    <div class="col-6 col-md-4"><div class="text-secondary small">Cambio de placas</div><div class="fw-semibold" data-v="cambio_placas">—</div></div>

                                    {{-- Pólizas --}}
                                    <div class="col-12"><div class="text-secondary small">Póliza HDI</div><div class="fw-semibold" data-v="poliza_hdi">—</div></div>
                                    <div class="col-12"><div class="text-secondary small">Póliza Latino</div><div class="fw-semibold" data-v="poliza_latino">—</div></div>
                                    <div class="col-12"><div class="text-secondary small">Póliza Qualitas</div><div class="fw-semibold" data-v="poliza_qualitas">—</div></div>
                                </div>
                            </div>
                        </div>

                        {{-- Fotos --}}
                        <div class="card mb-3">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h4 class="card-title mb-0">Fotos del vehículo</h4>
                                <div class="d-flex gap-2">
                                    <a id="managePhotosLink" href="#" class="btn btn-outline-secondary btn-sm">
                                        <i class="ti ti-photo-plus me-1" aria-hidden="true"></i>Gestionar fotos
                                    </a>
                                    <button id="openGalleryBtn" type="button" class="btn btn-dark btn-sm d-none">
                                        <i class="ti ti-slideshow me-1" aria-hidden="true"></i>Ver galería
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div id="photosEmpty" class="text-secondary small">Este vehículo no tiene fotos.</div>
                                <div id="photosGrid" class="row g-2"></div>
                            </div>
                        </div>

                        {{-- Tanques --}}
                        <div class="card">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h4 class="card-title mb-0">Tanques de combustible</h4>
                                <a id="addTankLink" href="#" class="btn btn-success btn-sm">
                                    <i class="ti ti-square-rounded-plus me-1" aria-hidden="true"></i>Agregar
                                </a>
                            </div>
                            <div class="card-body p-0">
                                <div class="table-responsive">
                                    <table class="table table-vcenter card-table mb-0">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Tipo</th>
                                                <th>Capacidad (L)</th>
                                                <th>Rend. (km/L)</th>
                                                <th>Km recorre</th>
                                                <th>Costo tanque lleno</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tanksTbody">
                                            <tr><td colspan="6" class="text-secondary small">Este vehículo no tiene tanques.</td></tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <a id="editVehicleLink" href="#" class="btn btn-outline-secondary">
                            <i class="ti ti-edit me-1" aria-hidden="true"></i>Editar vehículo
                        </a>
                        <button class="btn btn-primary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        {{-- MODAL GALERÍA (estilos en gallery.css) --}}
        <div class="modal modal-blur fade" id="galleryModal" tabindex="-1" aria-labelledby="galleryModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title h4" id="galleryModalLabel">
                            <i class="ti ti-photo me-2" aria-hidden="true"></i>Galería de fotos
                        </h3>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>

                    <div class="modal-body">
                        <div id="galleryCarousel" class="carousel slide" data-bs-interval="false" data-bs-touch="true">
                            <div class="carousel-inner" id="galleryInner"></div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#galleryCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Anterior</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#galleryCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Siguiente</span>
                            </button>
                        </div>
                    </div>

                    <div class="thumbs" id="galleryThumbs"></div>
                </div>
            </div>
        </div>

    </div>
</x-app-layout>

Vehiculos controller

<?php

namespace App\Http\Controllers;

use App\Models\Vehiculo;
use App\Models\TarjetaSiVale;
use App\Models\VehiculoFoto;
use Illuminate\Http\Request;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class VehiculoController extends Controller
{
    public function __construct()
    {
        // Listar/crear/editar para admin o capturista
        $this->middleware(['auth', 'role:administrador|capturista']);
    }

    /** Listado con filtros y paginación. */
    public function index(Request $request)
    {
        $sortBy  = $request->get('sort_by', 'unidad'); // ← default: unidad
        $sortDir = $request->get('sort_dir', 'asc');   // ← default: asc

        $vehiculos = Vehiculo::with(['tarjetaSiVale','tanques','fotos'])
            ->filter($request->all())
            ->sort($sortBy, $sortDir)
            ->paginate(15)
            ->withQueryString();

        $marcas = Vehiculo::select('marca')
            ->whereNotNull('marca')
            ->where('marca', '!=', '')
            ->distinct()
            ->orderBy('marca')
            ->pluck('marca');

        return view('vehiculos.index', compact('vehiculos', 'marcas'));
    }


    public function create()
    {
        $tarjetas = class_exists(TarjetaSiVale::class) ? TarjetaSiVale::orderBy('id')->get() : collect();
        return view('vehiculos.create', compact('tarjetas'));
    }

    public function store(Request $request)
    {
        // Validación de campos del vehículo (incluye poliza_latino/qualitas)
        $data = $this->validateVehiculo($request);

        // Crear vehículo
        $vehiculo = Vehiculo::create($data);

        // Si vienen fotos en el create, validarlas y guardarlas (opcional)
        if ($request->hasFile('fotos')) {
            $request->validate([
                'fotos'   => ['array'],
                'fotos.*' => ['file', 'image', 'mimes:jpg,jpeg,png,webp', 'max:8192'],
            ], [
                'fotos.*.image' => 'Cada archivo debe ser una imagen.',
                'fotos.*.mimes' => 'Formatos permitidos: jpg, jpeg, png, webp.',
                'fotos.*.max'   => 'Cada imagen no debe superar los 8 MB.',
            ]);

            foreach ($request->file('fotos', []) as $file) {
                $dir = "vehiculos/{$vehiculo->id}";
                $filename = now()->format('Ymd_His') . '_' . $vehiculo->id . '_' . Str::uuid() . '.' . $file->getClientOriginalExtension();

                // Guarda en disco local (privado)
                $relativePath = $file->storeAs($dir, $filename, 'local');

                VehiculoFoto::create([
                    'vehiculo_id' => $vehiculo->id,
                    'ruta'        => $relativePath,
                    'orden'       => 0,
                ]);
            }
        }

        return redirect()->route('vehiculos.index')
            ->with('success', 'Vehículo creado correctamente.');
    }

    public function show(Vehiculo $vehiculo)
    {
        $vehiculo->load(['tarjetaSiVale','fotos','tanques']);
        return view('vehiculos.show', compact('vehiculo'));
    }

    public function edit(Vehiculo $vehiculo)
    {
        $tarjetas = class_exists(TarjetaSiVale::class) ? TarjetaSiVale::orderBy('id')->get() : collect();
        return view('vehiculos.edit', compact('vehiculo', 'tarjetas'));
    }

    public function update(Request $request, Vehiculo $vehiculo)
    {
        // Validación de campos del vehículo (incluye poliza_latino/qualitas)
        $data = $this->validateVehiculo($request, $vehiculo->id);

        // Actualizar vehículo
        $vehiculo->update($data);

        // Si se agregan nuevas fotos desde el formulario de edición
        if ($request->hasFile('fotos')) {
            $request->validate([
                'fotos'   => ['array'],
                'fotos.*' => ['file', 'image', 'mimes:jpg,jpeg,png,webp', 'max:8192'],
            ], [
                'fotos.*.image' => 'Cada archivo debe ser una imagen.',
                'fotos.*.mimes' => 'Formatos permitidos: jpg, jpeg, png, webp.',
                'fotos.*.max'   => 'Cada imagen no debe superar los 8 MB.',
            ]);

            foreach ($request->file('fotos', []) as $file) {
                $dir = "vehiculos/{$vehiculo->id}";
                $filename = now()->format('Ymd_His') . '_' . $vehiculo->id . '_' . Str::uuid() . '.' . $file->getClientOriginalExtension();

                // Guarda en disco local (privado)
                $relativePath = $file->storeAs($dir, $filename, 'local');

                VehiculoFoto::create([
                    'vehiculo_id' => $vehiculo->id,
                    'ruta'        => $relativePath,
                    'orden'       => 0,
                ]);
            }
        }

        return redirect()->route('vehiculos.index')
            ->with('success', 'Vehículo actualizado correctamente.');
    }

    public function destroy(Vehiculo $vehiculo)
    {
        $vehiculo->delete();

        return redirect()->route('vehiculos.index')
            ->with('success', 'Vehículo eliminado correctamente.');
    }

    private function validateVehiculo(Request $request, $vehiculoId = null): array
    {
        return $request->validate([
            'ubicacion'                 => ['required', Rule::in(['CVC', 'IXT', 'QRO', 'VALL', 'GDL'])],
            'propietario'               => ['required', 'string', 'max:255'],
            'unidad'                    => ['required', 'string', 'max:255'],
            'marca'                     => ['nullable', 'string', 'max:255'],
            'anio'                      => ['nullable', 'integer', 'min:1900', 'max:'.date('Y')],
            'serie'                     => [
                'required', 'string', 'max:255',
                Rule::unique('vehiculos', 'serie')->ignore($vehiculoId),
            ],
            'motor'                     => ['nullable', 'string', 'max:255'],
            'placa'                     => [
                'nullable', 'string', 'max:255',
                Rule::unique('vehiculos', 'placa')->ignore($vehiculoId),
            ],
            'estado'                    => ['nullable', 'string', 'max:255'],
            // Tabla real en tu BD (según dump): tarjetassivale
            'tarjeta_si_vale_id'        => ['nullable', 'exists:tarjetassivale,id'],
            'nip'                       => ['nullable', 'string', 'max:255'],
            'fec_vencimiento'           => ['nullable', 'string', 'max:255'],
            'vencimiento_t_circulacion' => ['nullable', 'string', 'max:255'],
            'cambio_placas'             => ['nullable', 'string', 'max:255'],
            'poliza_hdi'                => ['nullable', 'string', 'max:255'],
            // 👇 Nuevos campos
            'poliza_latino'             => ['nullable', 'string', 'max:255'],
            'poliza_qualitas'           => ['nullable', 'string', 'max:255'],
            // eliminado: 'rend'
            // (si quieres validar kilometros, podrías añadir: 'kilometros' => ['nullable','integer','min:0'])
        ], [
            'serie.unique' => 'La serie ya está registrada.',
            'placa.unique' => 'La placa ya está registrada.',
            'tarjeta_si_vale_id.exists' => 'La tarjeta seleccionada no es válida.',
        ]);
    }
}

Dame los codigos completos